# Generated from xagl.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,41,237,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,
        3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,
        1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,
        1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
        1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,
        1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,4,34,187,
        8,34,11,34,12,34,188,1,35,1,35,1,35,1,35,1,36,1,36,5,36,197,8,36,
        10,36,12,36,200,9,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,37,3,37,213,8,37,1,38,4,38,216,8,38,11,38,12,38,217,1,38,
        1,38,1,39,1,39,5,39,224,8,39,10,39,12,39,227,9,39,1,40,1,40,5,40,
        231,8,40,10,40,12,40,234,9,40,1,40,1,40,1,198,0,41,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,1,0,5,1,0,48,57,3,0,9,10,13,13,32,32,3,0,65,
        90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,10,10,13,13,242,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,1,83,1,0,0,0,3,87,1,0,0,0,5,90,1,0,0,0,7,93,1,0,0,0,9,96,
        1,0,0,0,11,98,1,0,0,0,13,100,1,0,0,0,15,102,1,0,0,0,17,104,1,0,0,
        0,19,106,1,0,0,0,21,108,1,0,0,0,23,110,1,0,0,0,25,112,1,0,0,0,27,
        115,1,0,0,0,29,117,1,0,0,0,31,120,1,0,0,0,33,122,1,0,0,0,35,124,
        1,0,0,0,37,127,1,0,0,0,39,130,1,0,0,0,41,133,1,0,0,0,43,137,1,0,
        0,0,45,141,1,0,0,0,47,144,1,0,0,0,49,146,1,0,0,0,51,148,1,0,0,0,
        53,150,1,0,0,0,55,155,1,0,0,0,57,158,1,0,0,0,59,166,1,0,0,0,61,172,
        1,0,0,0,63,175,1,0,0,0,65,181,1,0,0,0,67,183,1,0,0,0,69,186,1,0,
        0,0,71,190,1,0,0,0,73,194,1,0,0,0,75,212,1,0,0,0,77,215,1,0,0,0,
        79,221,1,0,0,0,81,228,1,0,0,0,83,84,5,102,0,0,84,85,5,111,0,0,85,
        86,5,114,0,0,86,2,1,0,0,0,87,88,5,105,0,0,88,89,5,110,0,0,89,4,1,
        0,0,0,90,91,5,46,0,0,91,92,5,46,0,0,92,6,1,0,0,0,93,94,5,100,0,0,
        94,95,5,111,0,0,95,8,1,0,0,0,96,97,5,123,0,0,97,10,1,0,0,0,98,99,
        5,125,0,0,99,12,1,0,0,0,100,101,5,45,0,0,101,14,1,0,0,0,102,103,
        5,43,0,0,103,16,1,0,0,0,104,105,5,40,0,0,105,18,1,0,0,0,106,107,
        5,41,0,0,107,20,1,0,0,0,108,109,5,42,0,0,109,22,1,0,0,0,110,111,
        5,47,0,0,111,24,1,0,0,0,112,113,5,47,0,0,113,114,5,47,0,0,114,26,
        1,0,0,0,115,116,5,37,0,0,116,28,1,0,0,0,117,118,5,61,0,0,118,119,
        5,61,0,0,119,30,1,0,0,0,120,121,5,62,0,0,121,32,1,0,0,0,122,123,
        5,60,0,0,123,34,1,0,0,0,124,125,5,62,0,0,125,126,5,61,0,0,126,36,
        1,0,0,0,127,128,5,60,0,0,128,129,5,61,0,0,129,38,1,0,0,0,130,131,
        5,33,0,0,131,132,5,61,0,0,132,40,1,0,0,0,133,134,5,110,0,0,134,135,
        5,111,0,0,135,136,5,116,0,0,136,42,1,0,0,0,137,138,5,97,0,0,138,
        139,5,110,0,0,139,140,5,100,0,0,140,44,1,0,0,0,141,142,5,111,0,0,
        142,143,5,114,0,0,143,46,1,0,0,0,144,145,5,46,0,0,145,48,1,0,0,0,
        146,147,5,61,0,0,147,50,1,0,0,0,148,149,5,59,0,0,149,52,1,0,0,0,
        150,151,5,109,0,0,151,152,5,111,0,0,152,153,5,118,0,0,153,154,5,
        101,0,0,154,54,1,0,0,0,155,156,5,98,0,0,156,157,5,121,0,0,157,56,
        1,0,0,0,158,159,5,114,0,0,159,160,5,101,0,0,160,161,5,102,0,0,161,
        162,5,114,0,0,162,163,5,101,0,0,163,164,5,115,0,0,164,165,5,104,
        0,0,165,58,1,0,0,0,166,167,5,97,0,0,167,168,5,102,0,0,168,169,5,
        116,0,0,169,170,5,101,0,0,170,171,5,114,0,0,171,60,1,0,0,0,172,173,
        5,109,0,0,173,174,5,115,0,0,174,62,1,0,0,0,175,176,5,101,0,0,176,
        177,5,118,0,0,177,178,5,101,0,0,178,179,5,114,0,0,179,180,5,121,
        0,0,180,64,1,0,0,0,181,182,5,44,0,0,182,66,1,0,0,0,183,184,5,115,
        0,0,184,68,1,0,0,0,185,187,7,0,0,0,186,185,1,0,0,0,187,188,1,0,0,
        0,188,186,1,0,0,0,188,189,1,0,0,0,189,70,1,0,0,0,190,191,3,69,34,
        0,191,192,5,46,0,0,192,193,3,69,34,0,193,72,1,0,0,0,194,198,5,34,
        0,0,195,197,9,0,0,0,196,195,1,0,0,0,197,200,1,0,0,0,198,199,1,0,
        0,0,198,196,1,0,0,0,199,201,1,0,0,0,200,198,1,0,0,0,201,202,5,34,
        0,0,202,74,1,0,0,0,203,204,5,84,0,0,204,205,5,114,0,0,205,206,5,
        117,0,0,206,213,5,101,0,0,207,208,5,70,0,0,208,209,5,97,0,0,209,
        210,5,108,0,0,210,211,5,115,0,0,211,213,5,101,0,0,212,203,1,0,0,
        0,212,207,1,0,0,0,213,76,1,0,0,0,214,216,7,1,0,0,215,214,1,0,0,0,
        216,217,1,0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,219,1,0,0,0,
        219,220,6,38,0,0,220,78,1,0,0,0,221,225,7,2,0,0,222,224,7,3,0,0,
        223,222,1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,
        226,80,1,0,0,0,227,225,1,0,0,0,228,232,5,35,0,0,229,231,8,4,0,0,
        230,229,1,0,0,0,231,234,1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,
        233,235,1,0,0,0,234,232,1,0,0,0,235,236,6,40,0,0,236,82,1,0,0,0,
        7,0,188,198,212,217,225,232,1,6,0,0
    ]

class xaglLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    INT = 35
    NUMBER = 36
    STRING = 37
    BOOL = 38
    WS = 39
    ID = 40
    LINE_COMMENT = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'for'", "'in'", "'..'", "'do'", "'{'", "'}'", "'-'", "'+'", 
            "'('", "')'", "'*'", "'/'", "'//'", "'%'", "'=='", "'>'", "'<'", 
            "'>='", "'<='", "'!='", "'not'", "'and'", "'or'", "'.'", "'='", 
            "';'", "'move'", "'by'", "'refresh'", "'after'", "'ms'", "'every'", 
            "','", "'s'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "NUMBER", "STRING", "BOOL", "WS", "ID", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "INT", "NUMBER", "STRING", "BOOL", "WS", 
                  "ID", "LINE_COMMENT" ]

    grammarFileName = "xagl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


